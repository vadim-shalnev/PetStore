basePath: /api/
definitions:
  models.User:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      password:
        type: string
      phone:
        type: string
      userStatus:
        type: integer
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a geocode api server.
  title: PetStore API
  version: "1.0"
paths:
  /user:
    post:
      consumes:
      - application/json
      description: CreateUser
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: bad request
          schema:
            type: string
      tags:
      - User
  /user/{username}:
    delete:
      consumes:
      - application/json
      description: DeleteUser
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: bad request
          schema:
            type: string
      tags:
      - User
    get:
      consumes:
      - application/json
      description: GetUser
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: bad request
          schema:
            type: string
      tags:
      - User
    put:
      consumes:
      - application/json
      description: UpdateUser
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: bad request
          schema:
            type: string
      tags:
      - User
  /user/createWithList:
    post:
      consumes:
      - application/json
      description: CreateUsers
      parameters:
      - description: users
        in: body
        name: users
        required: true
        schema:
          items:
            $ref: '#/definitions/models.User'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: bad request
          schema:
            type: string
      tags:
      - Users
  /user/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: bad request
          schema:
            type: string
      tags:
      - User
  /user/logout:
    get:
      consumes:
      - application/json
      description: Logout
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: bad request
          schema:
            type: string
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
